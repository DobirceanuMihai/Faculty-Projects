package event;

import java.io.IOException;
import java.text.*;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

public class AddEventForm extends javax.swing.JFrame {
    SimpleDateFormat format = new SimpleDateFormat("dd.MM.yyyy");
    /**
     * Creates new form AddEventForm
     */
    public AddEventForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jSeparator1 = new javax.swing.JSeparator();
        AddEventLabel = new javax.swing.JLabel();
        NameOfTheNewEvent = new javax.swing.JTextField();
        CategoriesLabel = new javax.swing.JLabel();
        ConcertCheckBox = new javax.swing.JCheckBox();
        ArtCheckBox = new javax.swing.JCheckBox();
        MovieCheckBox = new javax.swing.JCheckBox();
        OtherCheckBox = new javax.swing.JCheckBox();
        CountryNewEvent = new javax.swing.JTextField();
        CityNewEvent = new javax.swing.JTextField();
        AddressField = new javax.swing.JTextField();
        StartEventCalendar = new com.toedter.calendar.JDateChooser();
        DateEventLabel = new javax.swing.JLabel();
        PriceTicketEventLabel = new javax.swing.JLabel();
        AddButton = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        EndEventDateLabel = new javax.swing.JLabel();
        EndEventDate = new com.toedter.calendar.JDateChooser();
        PriceTicketEventLabel2 = new javax.swing.JLabel();
        FestivalCheckBox = new javax.swing.JCheckBox();
        PriceTicketField = new javax.swing.JTextField();
        NrTicketsField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setAutoRequestFocus(false);
        setResizable(false);

        AddEventLabel.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        AddEventLabel.setForeground(new java.awt.Color(0, 102, 102));
        AddEventLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        AddEventLabel.setText("Add a new Event");
        AddEventLabel.setFocusable(false);

        NameOfTheNewEvent.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        NameOfTheNewEvent.setForeground(new java.awt.Color(0, 102, 102));
        NameOfTheNewEvent.setText("Enter the name of the event");
        NameOfTheNewEvent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NameOfTheNewEventActionPerformed(evt);
            }
        });

        CategoriesLabel.setBackground(new java.awt.Color(0, 102, 102));
        CategoriesLabel.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        CategoriesLabel.setForeground(new java.awt.Color(0, 102, 102));
        CategoriesLabel.setText("Categories:");

        buttonGroup1.add(ConcertCheckBox);
        ConcertCheckBox.setText("Concert");
        ConcertCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConcertCheckBoxActionPerformed(evt);
            }
        });

        buttonGroup1.add(ArtCheckBox);
        ArtCheckBox.setText("Art");
        ArtCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ArtCheckBoxActionPerformed(evt);
            }
        });

        buttonGroup1.add(MovieCheckBox);
        MovieCheckBox.setText("Movie");

        buttonGroup1.add(OtherCheckBox);
        OtherCheckBox.setText("Other");

        CountryNewEvent.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        CountryNewEvent.setForeground(new java.awt.Color(0, 102, 102));
        CountryNewEvent.setText("Country");
        CountryNewEvent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CountryNewEventActionPerformed(evt);
            }
        });

        CityNewEvent.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        CityNewEvent.setForeground(new java.awt.Color(0, 102, 102));
        CityNewEvent.setText("City");
        CityNewEvent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CityNewEventActionPerformed(evt);
            }
        });

        AddressField.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        AddressField.setForeground(new java.awt.Color(0, 102, 102));
        AddressField.setText("Address");
        AddressField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddressFieldActionPerformed(evt);
            }
        });

        StartEventCalendar.setDateFormatString("dd.MM.yyyy");

        DateEventLabel.setBackground(new java.awt.Color(0, 102, 102));
        DateEventLabel.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        DateEventLabel.setForeground(new java.awt.Color(0, 102, 102));
        DateEventLabel.setText("Start of the event:");

        PriceTicketEventLabel.setBackground(new java.awt.Color(0, 102, 102));
        PriceTicketEventLabel.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        PriceTicketEventLabel.setForeground(new java.awt.Color(0, 102, 102));
        PriceTicketEventLabel.setText("Price of the ticket:");

        AddButton.setBackground(new java.awt.Color(0, 153, 153));
        AddButton.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        AddButton.setForeground(new java.awt.Color(255, 255, 255));
        AddButton.setText("Add");
        AddButton.setToolTipText("");
        AddButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        AddButton.setBorderPainted(false);
        AddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddButtonActionPerformed(evt);
            }
        });

        EndEventDateLabel.setBackground(new java.awt.Color(0, 102, 102));
        EndEventDateLabel.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        EndEventDateLabel.setForeground(new java.awt.Color(0, 102, 102));
        EndEventDateLabel.setText("End of the event:");

        EndEventDate.setDateFormatString("dd.MM.yyyy");

        PriceTicketEventLabel2.setBackground(new java.awt.Color(0, 102, 102));
        PriceTicketEventLabel2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        PriceTicketEventLabel2.setForeground(new java.awt.Color(0, 102, 102));
        PriceTicketEventLabel2.setText("Number of tickets:");

        buttonGroup1.add(FestivalCheckBox);
        FestivalCheckBox.setText("Festival");
        FestivalCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FestivalCheckBoxActionPerformed(evt);
            }
        });

        PriceTicketField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PriceTicketFieldActionPerformed(evt);
            }
        });

        NrTicketsField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NrTicketsFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(NameOfTheNewEvent))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(AddressField))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(AddEventLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator1))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(CategoriesLabel)
                                        .addGap(1, 1, 1)
                                        .addComponent(ConcertCheckBox)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(ArtCheckBox))
                                    .addComponent(CountryNewEvent))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(MovieCheckBox)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(FestivalCheckBox)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(OtherCheckBox)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(CityNewEvent)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(PriceTicketEventLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(EndEventDateLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(EndEventDate, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(PriceTicketField, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(DateEventLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(StartEventCalendar, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(PriceTicketEventLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(NrTicketsField)))
                                .addGap(0, 7, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(AddButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(AddEventLabel)
                .addGap(33, 33, 33)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(NameOfTheNewEvent, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CategoriesLabel)
                    .addComponent(ConcertCheckBox)
                    .addComponent(ArtCheckBox)
                    .addComponent(MovieCheckBox)
                    .addComponent(OtherCheckBox)
                    .addComponent(FestivalCheckBox))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CountryNewEvent, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CityNewEvent, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addComponent(AddressField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(StartEventCalendar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DateEventLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(EndEventDate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(EndEventDateLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PriceTicketField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PriceTicketEventLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PriceTicketEventLabel2)
                    .addComponent(NrTicketsField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(AddButton, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void NameOfTheNewEventActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NameOfTheNewEventActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NameOfTheNewEventActionPerformed

    private void CountryNewEventActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CountryNewEventActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CountryNewEventActionPerformed

    private void CityNewEventActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CityNewEventActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CityNewEventActionPerformed

    private void AddressFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddressFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AddressFieldActionPerformed

    private void AddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddButtonActionPerformed
        if(NameOfTheNewEvent.getText().isEmpty() || CountryNewEvent.getText().isEmpty() || CityNewEvent.getText().isEmpty() || AddressField.getText().isEmpty() || 
                StartEventCalendar.getDate() == null || EndEventDate.getDate() == null || PriceTicketField.getText().isEmpty() || NrTicketsField.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Please fill all the forms!");
        }else{
            
            String category = null;
            int id = 0;
            if(MovieCheckBox.isSelected() || ArtCheckBox.isSelected() || ConcertCheckBox.isSelected() || FestivalCheckBox.isSelected() || OtherCheckBox.isSelected()){
                if(MovieCheckBox.isSelected())
                    category = "Movie";
                if(ArtCheckBox.isSelected())
                    category = "Art";
                if(ConcertCheckBox.isSelected())
                    category = "Concert";
                if(FestivalCheckBox.isSelected())
                    category = "Festival";
                if(OtherCheckBox.isSelected())
                    category = "Other";
                
                try {
                    Date startDate = format.parse(((JTextField)StartEventCalendar.getDateEditor().getUiComponent()).getText());
                    Date endDate = format.parse(((JTextField)EndEventDate.getDateEditor().getUiComponent()).getText());
                    
                    long diffInMilliseconds = endDate.getTime() - startDate.getTime();
                    long duration = diffInMilliseconds / (1000 * 60 * 60 * 24);

                    Event.addEvent(id, NameOfTheNewEvent.getText(), category, ((JTextField)StartEventCalendar.getDateEditor().getUiComponent()).getText(), ((JTextField)EndEventDate.getDateEditor().getUiComponent()).getText(),
                        CountryNewEvent.getText(), CityNewEvent.getText(), AddressField.getText(), Integer.parseInt(PriceTicketField.getText()), Integer.parseInt(NrTicketsField.getText()), Long.toString(duration));
                    
                } catch (ParseException | IOException ex) {
                    Logger.getLogger(AddEventForm.class.getName()).log(Level.SEVERE, null, ex);
                }

            }else{
                JOptionPane.showMessageDialog(null, "Check one box");
            }
        }
    }//GEN-LAST:event_AddButtonActionPerformed

    private void FestivalCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FestivalCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FestivalCheckBoxActionPerformed

    private void ArtCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ArtCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ArtCheckBoxActionPerformed

    private void ConcertCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConcertCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ConcertCheckBoxActionPerformed

    private void PriceTicketFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PriceTicketFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PriceTicketFieldActionPerformed

    private void NrTicketsFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NrTicketsFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NrTicketsFieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddEventForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddEventForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddEventForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddEventForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddEventForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddButton;
    private javax.swing.JLabel AddEventLabel;
    private javax.swing.JTextField AddressField;
    private javax.swing.JCheckBox ArtCheckBox;
    private javax.swing.JLabel CategoriesLabel;
    private javax.swing.JTextField CityNewEvent;
    private javax.swing.JCheckBox ConcertCheckBox;
    private javax.swing.JTextField CountryNewEvent;
    private javax.swing.JLabel DateEventLabel;
    private com.toedter.calendar.JDateChooser EndEventDate;
    private javax.swing.JLabel EndEventDateLabel;
    private javax.swing.JCheckBox FestivalCheckBox;
    private javax.swing.JCheckBox MovieCheckBox;
    private javax.swing.JTextField NameOfTheNewEvent;
    private javax.swing.JTextField NrTicketsField;
    private javax.swing.JCheckBox OtherCheckBox;
    private javax.swing.JLabel PriceTicketEventLabel;
    private javax.swing.JLabel PriceTicketEventLabel2;
    private javax.swing.JTextField PriceTicketField;
    private com.toedter.calendar.JDateChooser StartEventCalendar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    // End of variables declaration//GEN-END:variables
}
