package event;

import java.io.IOException;
import java.text.ParseException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author dobir
 */
public class UserPreferencesInterface extends javax.swing.JFrame {

    /**
     * Creates new form UserPreferencesInterface
     */
    public UserPreferencesInterface() {
        initComponents();
        
        try {
            if(User.checkCategory(Authentification.userid, "Art")){
                ArtCheckBox.setSelected(true);
            }
            if(User.checkCategory(Authentification.userid, "Concert")){
                ConcertCheckBox.setSelected(true);
            }
            if(User.checkCategory(Authentification.userid, "Movie")){
                MovieCheckBox.setSelected(true);
            }
            if(User.checkCategory(Authentification.userid, "Festival")){
                FestivalCheckBox.setSelected(true);
            }
            if(User.checkCategory(Authentification.userid, "Other")){
                OtherCheckBox.setSelected(true);
            }
        } catch (IOException ex) {
            Logger.getLogger(UserPreferencesInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public UserPreferencesInterface(int userid) {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PreferencesLabel = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        YourPreferencesLabel = new javax.swing.JLabel();
        CategoriesLabel = new javax.swing.JLabel();
        ConcertCheckBox = new javax.swing.JCheckBox();
        ArtCheckBox = new javax.swing.JCheckBox();
        MovieCheckBox = new javax.swing.JCheckBox();
        FestivalCheckBox = new javax.swing.JCheckBox();
        OtherCheckBox = new javax.swing.JCheckBox();
        FinishButton = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        PreferencesLabel.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        PreferencesLabel.setForeground(new java.awt.Color(0, 102, 102));
        PreferencesLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        PreferencesLabel.setText("Preferences");
        PreferencesLabel.setFocusable(false);

        YourPreferencesLabel.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        YourPreferencesLabel.setForeground(new java.awt.Color(0, 102, 102));
        YourPreferencesLabel.setText("Your preferences:");

        CategoriesLabel.setBackground(new java.awt.Color(0, 102, 102));
        CategoriesLabel.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        CategoriesLabel.setForeground(new java.awt.Color(0, 102, 102));
        CategoriesLabel.setText("Categories:");

        ConcertCheckBox.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        ConcertCheckBox.setText("Concert");
        ConcertCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConcertCheckBoxActionPerformed(evt);
            }
        });

        ArtCheckBox.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        ArtCheckBox.setText("Art");
        ArtCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ArtCheckBoxActionPerformed(evt);
            }
        });

        MovieCheckBox.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        MovieCheckBox.setText("Movie");
        MovieCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MovieCheckBoxActionPerformed(evt);
            }
        });

        FestivalCheckBox.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        FestivalCheckBox.setText("Festival");
        FestivalCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FestivalCheckBoxActionPerformed(evt);
            }
        });

        OtherCheckBox.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        OtherCheckBox.setText("Other");
        OtherCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OtherCheckBoxActionPerformed(evt);
            }
        });

        FinishButton.setBackground(new java.awt.Color(0, 153, 153));
        FinishButton.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        FinishButton.setForeground(new java.awt.Color(255, 255, 255));
        FinishButton.setText("Finish");
        FinishButton.setToolTipText("");
        FinishButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        FinishButton.setBorderPainted(false);
        FinishButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FinishButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addComponent(FinishButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator2)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(PreferencesLabel)
                            .addComponent(YourPreferencesLabel)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(CategoriesLabel)
                                .addGap(1, 1, 1)
                                .addComponent(ConcertCheckBox)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ArtCheckBox)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(MovieCheckBox)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(FestivalCheckBox)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(OtherCheckBox)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PreferencesLabel)
                .addGap(31, 31, 31)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(YourPreferencesLabel)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CategoriesLabel)
                    .addComponent(ConcertCheckBox)
                    .addComponent(ArtCheckBox)
                    .addComponent(MovieCheckBox)
                    .addComponent(FestivalCheckBox)
                    .addComponent(OtherCheckBox))
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(FinishButton, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void FinishButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FinishButtonActionPerformed
        try {
            if(MovieCheckBox.isSelected() || ArtCheckBox.isSelected() || ConcertCheckBox.isSelected() || FestivalCheckBox.isSelected() || OtherCheckBox.isSelected()){      
                if(ArtCheckBox.isSelected()){
                    if(!User.checkCategory(Authentification.userid, "Art")){        
                        User.addCategory(Authentification.userid, "Art");
                    }                
                }else{  
                    User.removeCategory(Authentification.userid, "Art");   
                }
                if(ConcertCheckBox.isSelected()){
                    if(!User.checkCategory(Authentification.userid, "Music")){      
                        User.addCategory(Authentification.userid, "Music");         
                    } 
                }else{
                    User.removeCategory(Authentification.userid, "Music"); 
                }
                if(MovieCheckBox.isSelected()){
                    if(!User.checkCategory(Authentification.userid, "Movie")){
                        User.addCategory(Authentification.userid, "Movie"); 
                    }
                }else{
                    User.removeCategory(Authentification.userid, "Movie"); 
                }
                if(FestivalCheckBox.isSelected()){
                    if(!User.checkCategory(Authentification.userid, "Festival")){
                        User.addCategory(Authentification.userid, "Festival");
                    }
                }else{
                    User.removeCategory(Authentification.userid, "Festival");
                }
                if(OtherCheckBox.isSelected()){
                    if(!User.checkCategory(Authentification.userid, "Other")){
                        User.addCategory(Authentification.userid, "Other");
                    }
                }else{
                    User.removeCategory(Authentification.userid, "Other");
                }

                dispose();
                new UserInterface(UserInterface.UsernameLabel.getText(), Authentification.userid).setVisible(true);
            }else{
                JOptionPane.showMessageDialog(null, "Check at least one box");
            }
        } catch (IOException ex) {
                Logger.getLogger(UserPreferencesInterface.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(UserPreferencesInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }//GEN-LAST:event_FinishButtonActionPerformed

    private void FestivalCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FestivalCheckBoxActionPerformed

    }//GEN-LAST:event_FestivalCheckBoxActionPerformed

    private void MovieCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MovieCheckBoxActionPerformed

    }//GEN-LAST:event_MovieCheckBoxActionPerformed

    private void ArtCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ArtCheckBoxActionPerformed

    }//GEN-LAST:event_ArtCheckBoxActionPerformed

    private void ConcertCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConcertCheckBoxActionPerformed

    }//GEN-LAST:event_ConcertCheckBoxActionPerformed

    private void OtherCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OtherCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_OtherCheckBoxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserPreferencesInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserPreferencesInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserPreferencesInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserPreferencesInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserPreferencesInterface().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JCheckBox ArtCheckBox;
    private javax.swing.JLabel CategoriesLabel;
    public static javax.swing.JCheckBox ConcertCheckBox;
    public static javax.swing.JCheckBox FestivalCheckBox;
    private javax.swing.JButton FinishButton;
    public static javax.swing.JCheckBox MovieCheckBox;
    public static javax.swing.JCheckBox OtherCheckBox;
    private javax.swing.JLabel PreferencesLabel;
    private javax.swing.JLabel YourPreferencesLabel;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    // End of variables declaration//GEN-END:variables
}
